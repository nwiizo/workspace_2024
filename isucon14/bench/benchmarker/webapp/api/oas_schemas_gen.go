// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"
)

type AppGetNearbyChairsOK struct {
	Chairs []AppGetNearbyChairsOKChairsItem `json:"chairs"`
	// 取得日時.
	RetrievedAt int64 `json:"retrieved_at"`
}

// GetChairs returns the value of Chairs.
func (s *AppGetNearbyChairsOK) GetChairs() []AppGetNearbyChairsOKChairsItem {
	return s.Chairs
}

// GetRetrievedAt returns the value of RetrievedAt.
func (s *AppGetNearbyChairsOK) GetRetrievedAt() int64 {
	return s.RetrievedAt
}

// SetChairs sets the value of Chairs.
func (s *AppGetNearbyChairsOK) SetChairs(val []AppGetNearbyChairsOKChairsItem) {
	s.Chairs = val
}

// SetRetrievedAt sets the value of RetrievedAt.
func (s *AppGetNearbyChairsOK) SetRetrievedAt(val int64) {
	s.RetrievedAt = val
}

type AppGetNearbyChairsOKChairsItem struct {
	// 椅子ID.
	ID string `json:"id"`
	// 椅子の名前.
	Name string `json:"name"`
	// 椅子のモデル.
	Model             string     `json:"model"`
	CurrentCoordinate Coordinate `json:"current_coordinate"`
}

// GetID returns the value of ID.
func (s *AppGetNearbyChairsOKChairsItem) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AppGetNearbyChairsOKChairsItem) GetName() string {
	return s.Name
}

// GetModel returns the value of Model.
func (s *AppGetNearbyChairsOKChairsItem) GetModel() string {
	return s.Model
}

// GetCurrentCoordinate returns the value of CurrentCoordinate.
func (s *AppGetNearbyChairsOKChairsItem) GetCurrentCoordinate() Coordinate {
	return s.CurrentCoordinate
}

// SetID sets the value of ID.
func (s *AppGetNearbyChairsOKChairsItem) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AppGetNearbyChairsOKChairsItem) SetName(val string) {
	s.Name = val
}

// SetModel sets the value of Model.
func (s *AppGetNearbyChairsOKChairsItem) SetModel(val string) {
	s.Model = val
}

// SetCurrentCoordinate sets the value of CurrentCoordinate.
func (s *AppGetNearbyChairsOKChairsItem) SetCurrentCoordinate(val Coordinate) {
	s.CurrentCoordinate = val
}

// 自分のライドが１つでも存在する場合は最新のものをdataで返す。過去にライドが１つも存在しない場合、dataはnullまたはundefined.
type AppGetNotificationOK struct {
	Data OptUserNotificationData `json:"data"`
	// 次回の通知ポーリングまでの待機時間(ミリ秒単位).
	RetryAfterMs OptInt `json:"retry_after_ms"`
}

// GetData returns the value of Data.
func (s *AppGetNotificationOK) GetData() OptUserNotificationData {
	return s.Data
}

// GetRetryAfterMs returns the value of RetryAfterMs.
func (s *AppGetNotificationOK) GetRetryAfterMs() OptInt {
	return s.RetryAfterMs
}

// SetData sets the value of Data.
func (s *AppGetNotificationOK) SetData(val OptUserNotificationData) {
	s.Data = val
}

// SetRetryAfterMs sets the value of RetryAfterMs.
func (s *AppGetNotificationOK) SetRetryAfterMs(val OptInt) {
	s.RetryAfterMs = val
}

type AppGetRidesOK struct {
	Rides []AppGetRidesOKRidesItem `json:"rides"`
}

// GetRides returns the value of Rides.
func (s *AppGetRidesOK) GetRides() []AppGetRidesOKRidesItem {
	return s.Rides
}

// SetRides sets the value of Rides.
func (s *AppGetRidesOK) SetRides(val []AppGetRidesOKRidesItem) {
	s.Rides = val
}

type AppGetRidesOKRidesItem struct {
	// ライドID.
	ID                    string     `json:"id"`
	PickupCoordinate      Coordinate `json:"pickup_coordinate"`
	DestinationCoordinate Coordinate `json:"destination_coordinate"`
	// 運賃.
	Fare  int                         `json:"fare"`
	Chair AppGetRidesOKRidesItemChair `json:"chair"`
	// 椅子の評価.
	Evaluation int `json:"evaluation"`
	// 配車要求日時.
	RequestedAt int64 `json:"requested_at"`
	// 評価まで完了した日時.
	CompletedAt int64 `json:"completed_at"`
}

// GetID returns the value of ID.
func (s *AppGetRidesOKRidesItem) GetID() string {
	return s.ID
}

// GetPickupCoordinate returns the value of PickupCoordinate.
func (s *AppGetRidesOKRidesItem) GetPickupCoordinate() Coordinate {
	return s.PickupCoordinate
}

// GetDestinationCoordinate returns the value of DestinationCoordinate.
func (s *AppGetRidesOKRidesItem) GetDestinationCoordinate() Coordinate {
	return s.DestinationCoordinate
}

// GetFare returns the value of Fare.
func (s *AppGetRidesOKRidesItem) GetFare() int {
	return s.Fare
}

// GetChair returns the value of Chair.
func (s *AppGetRidesOKRidesItem) GetChair() AppGetRidesOKRidesItemChair {
	return s.Chair
}

// GetEvaluation returns the value of Evaluation.
func (s *AppGetRidesOKRidesItem) GetEvaluation() int {
	return s.Evaluation
}

// GetRequestedAt returns the value of RequestedAt.
func (s *AppGetRidesOKRidesItem) GetRequestedAt() int64 {
	return s.RequestedAt
}

// GetCompletedAt returns the value of CompletedAt.
func (s *AppGetRidesOKRidesItem) GetCompletedAt() int64 {
	return s.CompletedAt
}

// SetID sets the value of ID.
func (s *AppGetRidesOKRidesItem) SetID(val string) {
	s.ID = val
}

// SetPickupCoordinate sets the value of PickupCoordinate.
func (s *AppGetRidesOKRidesItem) SetPickupCoordinate(val Coordinate) {
	s.PickupCoordinate = val
}

// SetDestinationCoordinate sets the value of DestinationCoordinate.
func (s *AppGetRidesOKRidesItem) SetDestinationCoordinate(val Coordinate) {
	s.DestinationCoordinate = val
}

// SetFare sets the value of Fare.
func (s *AppGetRidesOKRidesItem) SetFare(val int) {
	s.Fare = val
}

// SetChair sets the value of Chair.
func (s *AppGetRidesOKRidesItem) SetChair(val AppGetRidesOKRidesItemChair) {
	s.Chair = val
}

// SetEvaluation sets the value of Evaluation.
func (s *AppGetRidesOKRidesItem) SetEvaluation(val int) {
	s.Evaluation = val
}

// SetRequestedAt sets the value of RequestedAt.
func (s *AppGetRidesOKRidesItem) SetRequestedAt(val int64) {
	s.RequestedAt = val
}

// SetCompletedAt sets the value of CompletedAt.
func (s *AppGetRidesOKRidesItem) SetCompletedAt(val int64) {
	s.CompletedAt = val
}

type AppGetRidesOKRidesItemChair struct {
	// 椅子ID.
	ID string `json:"id"`
	// オーナー名.
	Owner string `json:"owner"`
	// 椅子の名前.
	Name string `json:"name"`
	// 椅子のモデル.
	Model string `json:"model"`
}

// GetID returns the value of ID.
func (s *AppGetRidesOKRidesItemChair) GetID() string {
	return s.ID
}

// GetOwner returns the value of Owner.
func (s *AppGetRidesOKRidesItemChair) GetOwner() string {
	return s.Owner
}

// GetName returns the value of Name.
func (s *AppGetRidesOKRidesItemChair) GetName() string {
	return s.Name
}

// GetModel returns the value of Model.
func (s *AppGetRidesOKRidesItemChair) GetModel() string {
	return s.Model
}

// SetID sets the value of ID.
func (s *AppGetRidesOKRidesItemChair) SetID(val string) {
	s.ID = val
}

// SetOwner sets the value of Owner.
func (s *AppGetRidesOKRidesItemChair) SetOwner(val string) {
	s.Owner = val
}

// SetName sets the value of Name.
func (s *AppGetRidesOKRidesItemChair) SetName(val string) {
	s.Name = val
}

// SetModel sets the value of Model.
func (s *AppGetRidesOKRidesItemChair) SetModel(val string) {
	s.Model = val
}

// AppPostPaymentMethodsNoContent is response for AppPostPaymentMethods operation.
type AppPostPaymentMethodsNoContent struct{}

func (*AppPostPaymentMethodsNoContent) appPostPaymentMethodsRes() {}

type AppPostPaymentMethodsReq struct {
	// 決済トークン.
	Token string `json:"token"`
}

// GetToken returns the value of Token.
func (s *AppPostPaymentMethodsReq) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *AppPostPaymentMethodsReq) SetToken(val string) {
	s.Token = val
}

type AppPostRideEvaluationBadRequest Error

func (*AppPostRideEvaluationBadRequest) appPostRideEvaluationRes() {}

type AppPostRideEvaluationNotFound Error

func (*AppPostRideEvaluationNotFound) appPostRideEvaluationRes() {}

type AppPostRideEvaluationOK struct {
	// 完了日時.
	CompletedAt int64 `json:"completed_at"`
}

// GetCompletedAt returns the value of CompletedAt.
func (s *AppPostRideEvaluationOK) GetCompletedAt() int64 {
	return s.CompletedAt
}

// SetCompletedAt sets the value of CompletedAt.
func (s *AppPostRideEvaluationOK) SetCompletedAt(val int64) {
	s.CompletedAt = val
}

func (*AppPostRideEvaluationOK) appPostRideEvaluationRes() {}

type AppPostRideEvaluationReq struct {
	// ライドの評価.
	Evaluation int `json:"evaluation"`
}

// GetEvaluation returns the value of Evaluation.
func (s *AppPostRideEvaluationReq) GetEvaluation() int {
	return s.Evaluation
}

// SetEvaluation sets the value of Evaluation.
func (s *AppPostRideEvaluationReq) SetEvaluation(val int) {
	s.Evaluation = val
}

type AppPostRidesAccepted struct {
	// ライドID.
	RideID string `json:"ride_id"`
	// 割引後運賃.
	Fare int `json:"fare"`
}

// GetRideID returns the value of RideID.
func (s *AppPostRidesAccepted) GetRideID() string {
	return s.RideID
}

// GetFare returns the value of Fare.
func (s *AppPostRidesAccepted) GetFare() int {
	return s.Fare
}

// SetRideID sets the value of RideID.
func (s *AppPostRidesAccepted) SetRideID(val string) {
	s.RideID = val
}

// SetFare sets the value of Fare.
func (s *AppPostRidesAccepted) SetFare(val int) {
	s.Fare = val
}

func (*AppPostRidesAccepted) appPostRidesRes() {}

type AppPostRidesBadRequest Error

func (*AppPostRidesBadRequest) appPostRidesRes() {}

type AppPostRidesConflict Error

func (*AppPostRidesConflict) appPostRidesRes() {}

type AppPostRidesEstimatedFareOK struct {
	// 割引後運賃.
	Fare int `json:"fare"`
	// 割引額.
	Discount int `json:"discount"`
}

// GetFare returns the value of Fare.
func (s *AppPostRidesEstimatedFareOK) GetFare() int {
	return s.Fare
}

// GetDiscount returns the value of Discount.
func (s *AppPostRidesEstimatedFareOK) GetDiscount() int {
	return s.Discount
}

// SetFare sets the value of Fare.
func (s *AppPostRidesEstimatedFareOK) SetFare(val int) {
	s.Fare = val
}

// SetDiscount sets the value of Discount.
func (s *AppPostRidesEstimatedFareOK) SetDiscount(val int) {
	s.Discount = val
}

func (*AppPostRidesEstimatedFareOK) appPostRidesEstimatedFareRes() {}

type AppPostRidesEstimatedFareReq struct {
	// 配車位置.
	PickupCoordinate Coordinate `json:"pickup_coordinate"`
	// 目的地.
	DestinationCoordinate Coordinate `json:"destination_coordinate"`
}

// GetPickupCoordinate returns the value of PickupCoordinate.
func (s *AppPostRidesEstimatedFareReq) GetPickupCoordinate() Coordinate {
	return s.PickupCoordinate
}

// GetDestinationCoordinate returns the value of DestinationCoordinate.
func (s *AppPostRidesEstimatedFareReq) GetDestinationCoordinate() Coordinate {
	return s.DestinationCoordinate
}

// SetPickupCoordinate sets the value of PickupCoordinate.
func (s *AppPostRidesEstimatedFareReq) SetPickupCoordinate(val Coordinate) {
	s.PickupCoordinate = val
}

// SetDestinationCoordinate sets the value of DestinationCoordinate.
func (s *AppPostRidesEstimatedFareReq) SetDestinationCoordinate(val Coordinate) {
	s.DestinationCoordinate = val
}

type AppPostRidesReq struct {
	// 配車位置.
	PickupCoordinate Coordinate `json:"pickup_coordinate"`
	// 目的地.
	DestinationCoordinate Coordinate `json:"destination_coordinate"`
}

// GetPickupCoordinate returns the value of PickupCoordinate.
func (s *AppPostRidesReq) GetPickupCoordinate() Coordinate {
	return s.PickupCoordinate
}

// GetDestinationCoordinate returns the value of DestinationCoordinate.
func (s *AppPostRidesReq) GetDestinationCoordinate() Coordinate {
	return s.DestinationCoordinate
}

// SetPickupCoordinate sets the value of PickupCoordinate.
func (s *AppPostRidesReq) SetPickupCoordinate(val Coordinate) {
	s.PickupCoordinate = val
}

// SetDestinationCoordinate sets the value of DestinationCoordinate.
func (s *AppPostRidesReq) SetDestinationCoordinate(val Coordinate) {
	s.DestinationCoordinate = val
}

type AppPostUsersCreated struct {
	// ユーザーID.
	ID string `json:"id"`
	// 自分の招待コード.
	InvitationCode string `json:"invitation_code"`
}

// GetID returns the value of ID.
func (s *AppPostUsersCreated) GetID() string {
	return s.ID
}

// GetInvitationCode returns the value of InvitationCode.
func (s *AppPostUsersCreated) GetInvitationCode() string {
	return s.InvitationCode
}

// SetID sets the value of ID.
func (s *AppPostUsersCreated) SetID(val string) {
	s.ID = val
}

// SetInvitationCode sets the value of InvitationCode.
func (s *AppPostUsersCreated) SetInvitationCode(val string) {
	s.InvitationCode = val
}

// AppPostUsersCreatedHeaders wraps AppPostUsersCreated with response headers.
type AppPostUsersCreatedHeaders struct {
	SetCookie OptString
	Response  AppPostUsersCreated
}

// GetSetCookie returns the value of SetCookie.
func (s *AppPostUsersCreatedHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *AppPostUsersCreatedHeaders) GetResponse() AppPostUsersCreated {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *AppPostUsersCreatedHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *AppPostUsersCreatedHeaders) SetResponse(val AppPostUsersCreated) {
	s.Response = val
}

func (*AppPostUsersCreatedHeaders) appPostUsersRes() {}

type AppPostUsersReq struct {
	// ユーザー名.
	Username string `json:"username"`
	// 名前.
	Firstname string `json:"firstname"`
	// 名字.
	Lastname string `json:"lastname"`
	// 生年月日.
	DateOfBirth string `json:"date_of_birth"`
	// 他の人の招待コード.
	InvitationCode OptString `json:"invitation_code"`
}

// GetUsername returns the value of Username.
func (s *AppPostUsersReq) GetUsername() string {
	return s.Username
}

// GetFirstname returns the value of Firstname.
func (s *AppPostUsersReq) GetFirstname() string {
	return s.Firstname
}

// GetLastname returns the value of Lastname.
func (s *AppPostUsersReq) GetLastname() string {
	return s.Lastname
}

// GetDateOfBirth returns the value of DateOfBirth.
func (s *AppPostUsersReq) GetDateOfBirth() string {
	return s.DateOfBirth
}

// GetInvitationCode returns the value of InvitationCode.
func (s *AppPostUsersReq) GetInvitationCode() OptString {
	return s.InvitationCode
}

// SetUsername sets the value of Username.
func (s *AppPostUsersReq) SetUsername(val string) {
	s.Username = val
}

// SetFirstname sets the value of Firstname.
func (s *AppPostUsersReq) SetFirstname(val string) {
	s.Firstname = val
}

// SetLastname sets the value of Lastname.
func (s *AppPostUsersReq) SetLastname(val string) {
	s.Lastname = val
}

// SetDateOfBirth sets the value of DateOfBirth.
func (s *AppPostUsersReq) SetDateOfBirth(val string) {
	s.DateOfBirth = val
}

// SetInvitationCode sets the value of InvitationCode.
func (s *AppPostUsersReq) SetInvitationCode(val OptString) {
	s.InvitationCode = val
}

// 自分に割り当てられたライドが１つでも存在する場合は最新のものをdataで返す。過去にライドが１つも割り当てられていない場合、dataはnullまたはundefined.
type ChairGetNotificationOK struct {
	Data OptChairNotificationData `json:"data"`
	// 次回の通知ポーリングまでの待機時間(ミリ秒単位).
	RetryAfterMs OptInt `json:"retry_after_ms"`
}

// GetData returns the value of Data.
func (s *ChairGetNotificationOK) GetData() OptChairNotificationData {
	return s.Data
}

// GetRetryAfterMs returns the value of RetryAfterMs.
func (s *ChairGetNotificationOK) GetRetryAfterMs() OptInt {
	return s.RetryAfterMs
}

// SetData sets the value of Data.
func (s *ChairGetNotificationOK) SetData(val OptChairNotificationData) {
	s.Data = val
}

// SetRetryAfterMs sets the value of RetryAfterMs.
func (s *ChairGetNotificationOK) SetRetryAfterMs(val OptInt) {
	s.RetryAfterMs = val
}

// 椅子向け通知データ.
// Ref: #/components/schemas/ChairNotificationData
type ChairNotificationData struct {
	// ライドID.
	RideID                string     `json:"ride_id"`
	User                  User       `json:"user"`
	PickupCoordinate      Coordinate `json:"pickup_coordinate"`
	DestinationCoordinate Coordinate `json:"destination_coordinate"`
	Status                RideStatus `json:"status"`
}

// GetRideID returns the value of RideID.
func (s *ChairNotificationData) GetRideID() string {
	return s.RideID
}

// GetUser returns the value of User.
func (s *ChairNotificationData) GetUser() User {
	return s.User
}

// GetPickupCoordinate returns the value of PickupCoordinate.
func (s *ChairNotificationData) GetPickupCoordinate() Coordinate {
	return s.PickupCoordinate
}

// GetDestinationCoordinate returns the value of DestinationCoordinate.
func (s *ChairNotificationData) GetDestinationCoordinate() Coordinate {
	return s.DestinationCoordinate
}

// GetStatus returns the value of Status.
func (s *ChairNotificationData) GetStatus() RideStatus {
	return s.Status
}

// SetRideID sets the value of RideID.
func (s *ChairNotificationData) SetRideID(val string) {
	s.RideID = val
}

// SetUser sets the value of User.
func (s *ChairNotificationData) SetUser(val User) {
	s.User = val
}

// SetPickupCoordinate sets the value of PickupCoordinate.
func (s *ChairNotificationData) SetPickupCoordinate(val Coordinate) {
	s.PickupCoordinate = val
}

// SetDestinationCoordinate sets the value of DestinationCoordinate.
func (s *ChairNotificationData) SetDestinationCoordinate(val Coordinate) {
	s.DestinationCoordinate = val
}

// SetStatus sets the value of Status.
func (s *ChairNotificationData) SetStatus(val RideStatus) {
	s.Status = val
}

// ChairPostActivityNoContent is response for ChairPostActivity operation.
type ChairPostActivityNoContent struct{}

type ChairPostActivityReq struct {
	// 配車受付を開始するか停止するか.
	IsActive bool `json:"is_active"`
}

// GetIsActive returns the value of IsActive.
func (s *ChairPostActivityReq) GetIsActive() bool {
	return s.IsActive
}

// SetIsActive sets the value of IsActive.
func (s *ChairPostActivityReq) SetIsActive(val bool) {
	s.IsActive = val
}

type ChairPostChairsCreated struct {
	// 椅子ID.
	ID string `json:"id"`
	// オーナーID.
	OwnerID string `json:"owner_id"`
}

// GetID returns the value of ID.
func (s *ChairPostChairsCreated) GetID() string {
	return s.ID
}

// GetOwnerID returns the value of OwnerID.
func (s *ChairPostChairsCreated) GetOwnerID() string {
	return s.OwnerID
}

// SetID sets the value of ID.
func (s *ChairPostChairsCreated) SetID(val string) {
	s.ID = val
}

// SetOwnerID sets the value of OwnerID.
func (s *ChairPostChairsCreated) SetOwnerID(val string) {
	s.OwnerID = val
}

// ChairPostChairsCreatedHeaders wraps ChairPostChairsCreated with response headers.
type ChairPostChairsCreatedHeaders struct {
	SetCookie OptString
	Response  ChairPostChairsCreated
}

// GetSetCookie returns the value of SetCookie.
func (s *ChairPostChairsCreatedHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *ChairPostChairsCreatedHeaders) GetResponse() ChairPostChairsCreated {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *ChairPostChairsCreatedHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *ChairPostChairsCreatedHeaders) SetResponse(val ChairPostChairsCreated) {
	s.Response = val
}

type ChairPostChairsReq struct {
	// 椅子の名前.
	Name string `json:"name"`
	// 椅子のモデル.
	Model string `json:"model"`
	// 椅子をオーナーに紐づけるための椅子登録用トークン.
	ChairRegisterToken string `json:"chair_register_token"`
}

// GetName returns the value of Name.
func (s *ChairPostChairsReq) GetName() string {
	return s.Name
}

// GetModel returns the value of Model.
func (s *ChairPostChairsReq) GetModel() string {
	return s.Model
}

// GetChairRegisterToken returns the value of ChairRegisterToken.
func (s *ChairPostChairsReq) GetChairRegisterToken() string {
	return s.ChairRegisterToken
}

// SetName sets the value of Name.
func (s *ChairPostChairsReq) SetName(val string) {
	s.Name = val
}

// SetModel sets the value of Model.
func (s *ChairPostChairsReq) SetModel(val string) {
	s.Model = val
}

// SetChairRegisterToken sets the value of ChairRegisterToken.
func (s *ChairPostChairsReq) SetChairRegisterToken(val string) {
	s.ChairRegisterToken = val
}

type ChairPostCoordinateOK struct {
	// 記録日時.
	RecordedAt int64 `json:"recorded_at"`
}

// GetRecordedAt returns the value of RecordedAt.
func (s *ChairPostCoordinateOK) GetRecordedAt() int64 {
	return s.RecordedAt
}

// SetRecordedAt sets the value of RecordedAt.
func (s *ChairPostCoordinateOK) SetRecordedAt(val int64) {
	s.RecordedAt = val
}

// ChairPostRideStatusNoContent is response for ChairPostRideStatus operation.
type ChairPostRideStatusNoContent struct{}

func (*ChairPostRideStatusNoContent) chairPostRideStatusRes() {}

type ChairPostRideStatusReq struct {
	// ライドの状態
	// ENROUTE: マッチしたライドを確認し、乗車位置に向かう
	// CARRYING: ユーザーが乗車し、椅子が目的地に向かう.
	Status ChairPostRideStatusReqStatus `json:"status"`
}

// GetStatus returns the value of Status.
func (s *ChairPostRideStatusReq) GetStatus() ChairPostRideStatusReqStatus {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *ChairPostRideStatusReq) SetStatus(val ChairPostRideStatusReqStatus) {
	s.Status = val
}

// ライドの状態
// ENROUTE: マッチしたライドを確認し、乗車位置に向かう
// CARRYING: ユーザーが乗車し、椅子が目的地に向かう.
type ChairPostRideStatusReqStatus string

const (
	ChairPostRideStatusReqStatusENROUTE  ChairPostRideStatusReqStatus = "ENROUTE"
	ChairPostRideStatusReqStatusCARRYING ChairPostRideStatusReqStatus = "CARRYING"
)

// AllValues returns all ChairPostRideStatusReqStatus values.
func (ChairPostRideStatusReqStatus) AllValues() []ChairPostRideStatusReqStatus {
	return []ChairPostRideStatusReqStatus{
		ChairPostRideStatusReqStatusENROUTE,
		ChairPostRideStatusReqStatusCARRYING,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ChairPostRideStatusReqStatus) MarshalText() ([]byte, error) {
	switch s {
	case ChairPostRideStatusReqStatusENROUTE:
		return []byte(s), nil
	case ChairPostRideStatusReqStatusCARRYING:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ChairPostRideStatusReqStatus) UnmarshalText(data []byte) error {
	switch ChairPostRideStatusReqStatus(data) {
	case ChairPostRideStatusReqStatusENROUTE:
		*s = ChairPostRideStatusReqStatusENROUTE
		return nil
	case ChairPostRideStatusReqStatusCARRYING:
		*s = ChairPostRideStatusReqStatusCARRYING
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 座標情報.
// Ref: #/components/schemas/Coordinate
type Coordinate struct {
	// 経度.
	Latitude int `json:"latitude"`
	// 緯度.
	Longitude int `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *Coordinate) GetLatitude() int {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *Coordinate) GetLongitude() int {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *Coordinate) SetLatitude(val int) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *Coordinate) SetLongitude(val int) {
	s.Longitude = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

func (*Error) appPostPaymentMethodsRes()     {}
func (*Error) appPostRidesEstimatedFareRes() {}
func (*Error) appPostUsersRes()              {}
func (*Error) chairPostRideStatusRes()       {}
func (*Error) ownerPostOwnersRes()           {}

// InternalGetMatchingNoContent is response for InternalGetMatching operation.
type InternalGetMatchingNoContent struct{}

// NewOptAppPostPaymentMethodsReq returns new OptAppPostPaymentMethodsReq with value set to v.
func NewOptAppPostPaymentMethodsReq(v AppPostPaymentMethodsReq) OptAppPostPaymentMethodsReq {
	return OptAppPostPaymentMethodsReq{
		Value: v,
		Set:   true,
	}
}

// OptAppPostPaymentMethodsReq is optional AppPostPaymentMethodsReq.
type OptAppPostPaymentMethodsReq struct {
	Value AppPostPaymentMethodsReq
	Set   bool
}

// IsSet returns true if OptAppPostPaymentMethodsReq was set.
func (o OptAppPostPaymentMethodsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPostPaymentMethodsReq) Reset() {
	var v AppPostPaymentMethodsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPostPaymentMethodsReq) SetTo(v AppPostPaymentMethodsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPostPaymentMethodsReq) Get() (v AppPostPaymentMethodsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAppPostPaymentMethodsReq) Or(d AppPostPaymentMethodsReq) AppPostPaymentMethodsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAppPostRideEvaluationReq returns new OptAppPostRideEvaluationReq with value set to v.
func NewOptAppPostRideEvaluationReq(v AppPostRideEvaluationReq) OptAppPostRideEvaluationReq {
	return OptAppPostRideEvaluationReq{
		Value: v,
		Set:   true,
	}
}

// OptAppPostRideEvaluationReq is optional AppPostRideEvaluationReq.
type OptAppPostRideEvaluationReq struct {
	Value AppPostRideEvaluationReq
	Set   bool
}

// IsSet returns true if OptAppPostRideEvaluationReq was set.
func (o OptAppPostRideEvaluationReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPostRideEvaluationReq) Reset() {
	var v AppPostRideEvaluationReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPostRideEvaluationReq) SetTo(v AppPostRideEvaluationReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPostRideEvaluationReq) Get() (v AppPostRideEvaluationReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAppPostRideEvaluationReq) Or(d AppPostRideEvaluationReq) AppPostRideEvaluationReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAppPostRidesEstimatedFareReq returns new OptAppPostRidesEstimatedFareReq with value set to v.
func NewOptAppPostRidesEstimatedFareReq(v AppPostRidesEstimatedFareReq) OptAppPostRidesEstimatedFareReq {
	return OptAppPostRidesEstimatedFareReq{
		Value: v,
		Set:   true,
	}
}

// OptAppPostRidesEstimatedFareReq is optional AppPostRidesEstimatedFareReq.
type OptAppPostRidesEstimatedFareReq struct {
	Value AppPostRidesEstimatedFareReq
	Set   bool
}

// IsSet returns true if OptAppPostRidesEstimatedFareReq was set.
func (o OptAppPostRidesEstimatedFareReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPostRidesEstimatedFareReq) Reset() {
	var v AppPostRidesEstimatedFareReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPostRidesEstimatedFareReq) SetTo(v AppPostRidesEstimatedFareReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPostRidesEstimatedFareReq) Get() (v AppPostRidesEstimatedFareReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAppPostRidesEstimatedFareReq) Or(d AppPostRidesEstimatedFareReq) AppPostRidesEstimatedFareReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAppPostRidesReq returns new OptAppPostRidesReq with value set to v.
func NewOptAppPostRidesReq(v AppPostRidesReq) OptAppPostRidesReq {
	return OptAppPostRidesReq{
		Value: v,
		Set:   true,
	}
}

// OptAppPostRidesReq is optional AppPostRidesReq.
type OptAppPostRidesReq struct {
	Value AppPostRidesReq
	Set   bool
}

// IsSet returns true if OptAppPostRidesReq was set.
func (o OptAppPostRidesReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPostRidesReq) Reset() {
	var v AppPostRidesReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPostRidesReq) SetTo(v AppPostRidesReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPostRidesReq) Get() (v AppPostRidesReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAppPostRidesReq) Or(d AppPostRidesReq) AppPostRidesReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAppPostUsersReq returns new OptAppPostUsersReq with value set to v.
func NewOptAppPostUsersReq(v AppPostUsersReq) OptAppPostUsersReq {
	return OptAppPostUsersReq{
		Value: v,
		Set:   true,
	}
}

// OptAppPostUsersReq is optional AppPostUsersReq.
type OptAppPostUsersReq struct {
	Value AppPostUsersReq
	Set   bool
}

// IsSet returns true if OptAppPostUsersReq was set.
func (o OptAppPostUsersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPostUsersReq) Reset() {
	var v AppPostUsersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPostUsersReq) SetTo(v AppPostUsersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPostUsersReq) Get() (v AppPostUsersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAppPostUsersReq) Or(d AppPostUsersReq) AppPostUsersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChairNotificationData returns new OptChairNotificationData with value set to v.
func NewOptChairNotificationData(v ChairNotificationData) OptChairNotificationData {
	return OptChairNotificationData{
		Value: v,
		Set:   true,
	}
}

// OptChairNotificationData is optional ChairNotificationData.
type OptChairNotificationData struct {
	Value ChairNotificationData
	Set   bool
}

// IsSet returns true if OptChairNotificationData was set.
func (o OptChairNotificationData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChairNotificationData) Reset() {
	var v ChairNotificationData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChairNotificationData) SetTo(v ChairNotificationData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChairNotificationData) Get() (v ChairNotificationData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChairNotificationData) Or(d ChairNotificationData) ChairNotificationData {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChairPostActivityReq returns new OptChairPostActivityReq with value set to v.
func NewOptChairPostActivityReq(v ChairPostActivityReq) OptChairPostActivityReq {
	return OptChairPostActivityReq{
		Value: v,
		Set:   true,
	}
}

// OptChairPostActivityReq is optional ChairPostActivityReq.
type OptChairPostActivityReq struct {
	Value ChairPostActivityReq
	Set   bool
}

// IsSet returns true if OptChairPostActivityReq was set.
func (o OptChairPostActivityReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChairPostActivityReq) Reset() {
	var v ChairPostActivityReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChairPostActivityReq) SetTo(v ChairPostActivityReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChairPostActivityReq) Get() (v ChairPostActivityReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChairPostActivityReq) Or(d ChairPostActivityReq) ChairPostActivityReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChairPostChairsReq returns new OptChairPostChairsReq with value set to v.
func NewOptChairPostChairsReq(v ChairPostChairsReq) OptChairPostChairsReq {
	return OptChairPostChairsReq{
		Value: v,
		Set:   true,
	}
}

// OptChairPostChairsReq is optional ChairPostChairsReq.
type OptChairPostChairsReq struct {
	Value ChairPostChairsReq
	Set   bool
}

// IsSet returns true if OptChairPostChairsReq was set.
func (o OptChairPostChairsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChairPostChairsReq) Reset() {
	var v ChairPostChairsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChairPostChairsReq) SetTo(v ChairPostChairsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChairPostChairsReq) Get() (v ChairPostChairsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChairPostChairsReq) Or(d ChairPostChairsReq) ChairPostChairsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChairPostRideStatusReq returns new OptChairPostRideStatusReq with value set to v.
func NewOptChairPostRideStatusReq(v ChairPostRideStatusReq) OptChairPostRideStatusReq {
	return OptChairPostRideStatusReq{
		Value: v,
		Set:   true,
	}
}

// OptChairPostRideStatusReq is optional ChairPostRideStatusReq.
type OptChairPostRideStatusReq struct {
	Value ChairPostRideStatusReq
	Set   bool
}

// IsSet returns true if OptChairPostRideStatusReq was set.
func (o OptChairPostRideStatusReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChairPostRideStatusReq) Reset() {
	var v ChairPostRideStatusReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChairPostRideStatusReq) SetTo(v ChairPostRideStatusReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChairPostRideStatusReq) Get() (v ChairPostRideStatusReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChairPostRideStatusReq) Or(d ChairPostRideStatusReq) ChairPostRideStatusReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCoordinate returns new OptCoordinate with value set to v.
func NewOptCoordinate(v Coordinate) OptCoordinate {
	return OptCoordinate{
		Value: v,
		Set:   true,
	}
}

// OptCoordinate is optional Coordinate.
type OptCoordinate struct {
	Value Coordinate
	Set   bool
}

// IsSet returns true if OptCoordinate was set.
func (o OptCoordinate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCoordinate) Reset() {
	var v Coordinate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCoordinate) SetTo(v Coordinate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCoordinate) Get() (v Coordinate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCoordinate) Or(d Coordinate) Coordinate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOwnerPostOwnersReq returns new OptOwnerPostOwnersReq with value set to v.
func NewOptOwnerPostOwnersReq(v OwnerPostOwnersReq) OptOwnerPostOwnersReq {
	return OptOwnerPostOwnersReq{
		Value: v,
		Set:   true,
	}
}

// OptOwnerPostOwnersReq is optional OwnerPostOwnersReq.
type OptOwnerPostOwnersReq struct {
	Value OwnerPostOwnersReq
	Set   bool
}

// IsSet returns true if OptOwnerPostOwnersReq was set.
func (o OptOwnerPostOwnersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOwnerPostOwnersReq) Reset() {
	var v OwnerPostOwnersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOwnerPostOwnersReq) SetTo(v OwnerPostOwnersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOwnerPostOwnersReq) Get() (v OwnerPostOwnersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOwnerPostOwnersReq) Or(d OwnerPostOwnersReq) OwnerPostOwnersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostInitializeReq returns new OptPostInitializeReq with value set to v.
func NewOptPostInitializeReq(v PostInitializeReq) OptPostInitializeReq {
	return OptPostInitializeReq{
		Value: v,
		Set:   true,
	}
}

// OptPostInitializeReq is optional PostInitializeReq.
type OptPostInitializeReq struct {
	Value PostInitializeReq
	Set   bool
}

// IsSet returns true if OptPostInitializeReq was set.
func (o OptPostInitializeReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostInitializeReq) Reset() {
	var v PostInitializeReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostInitializeReq) SetTo(v PostInitializeReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostInitializeReq) Get() (v PostInitializeReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostInitializeReq) Or(d PostInitializeReq) PostInitializeReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserNotificationData returns new OptUserNotificationData with value set to v.
func NewOptUserNotificationData(v UserNotificationData) OptUserNotificationData {
	return OptUserNotificationData{
		Value: v,
		Set:   true,
	}
}

// OptUserNotificationData is optional UserNotificationData.
type OptUserNotificationData struct {
	Value UserNotificationData
	Set   bool
}

// IsSet returns true if OptUserNotificationData was set.
func (o OptUserNotificationData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserNotificationData) Reset() {
	var v UserNotificationData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserNotificationData) SetTo(v UserNotificationData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserNotificationData) Get() (v UserNotificationData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserNotificationData) Or(d UserNotificationData) UserNotificationData {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserNotificationDataChair returns new OptUserNotificationDataChair with value set to v.
func NewOptUserNotificationDataChair(v UserNotificationDataChair) OptUserNotificationDataChair {
	return OptUserNotificationDataChair{
		Value: v,
		Set:   true,
	}
}

// OptUserNotificationDataChair is optional UserNotificationDataChair.
type OptUserNotificationDataChair struct {
	Value UserNotificationDataChair
	Set   bool
}

// IsSet returns true if OptUserNotificationDataChair was set.
func (o OptUserNotificationDataChair) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserNotificationDataChair) Reset() {
	var v UserNotificationDataChair
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserNotificationDataChair) SetTo(v UserNotificationDataChair) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserNotificationDataChair) Get() (v UserNotificationDataChair, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserNotificationDataChair) Or(d UserNotificationDataChair) UserNotificationDataChair {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type OwnerGetChairsOK struct {
	Chairs []OwnerGetChairsOKChairsItem `json:"chairs"`
}

// GetChairs returns the value of Chairs.
func (s *OwnerGetChairsOK) GetChairs() []OwnerGetChairsOKChairsItem {
	return s.Chairs
}

// SetChairs sets the value of Chairs.
func (s *OwnerGetChairsOK) SetChairs(val []OwnerGetChairsOKChairsItem) {
	s.Chairs = val
}

type OwnerGetChairsOKChairsItem struct {
	// 椅子ID.
	ID string `json:"id"`
	// 椅子の名前.
	Name string `json:"name"`
	// 椅子のモデル.
	Model string `json:"model"`
	// 稼働中かどうか.
	Active bool `json:"active"`
	// 登録日時.
	RegisteredAt int64 `json:"registered_at"`
	// 総移動距離.
	TotalDistance int `json:"total_distance"`
	// 総移動距離の更新日時.
	TotalDistanceUpdatedAt OptInt64 `json:"total_distance_updated_at"`
}

// GetID returns the value of ID.
func (s *OwnerGetChairsOKChairsItem) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *OwnerGetChairsOKChairsItem) GetName() string {
	return s.Name
}

// GetModel returns the value of Model.
func (s *OwnerGetChairsOKChairsItem) GetModel() string {
	return s.Model
}

// GetActive returns the value of Active.
func (s *OwnerGetChairsOKChairsItem) GetActive() bool {
	return s.Active
}

// GetRegisteredAt returns the value of RegisteredAt.
func (s *OwnerGetChairsOKChairsItem) GetRegisteredAt() int64 {
	return s.RegisteredAt
}

// GetTotalDistance returns the value of TotalDistance.
func (s *OwnerGetChairsOKChairsItem) GetTotalDistance() int {
	return s.TotalDistance
}

// GetTotalDistanceUpdatedAt returns the value of TotalDistanceUpdatedAt.
func (s *OwnerGetChairsOKChairsItem) GetTotalDistanceUpdatedAt() OptInt64 {
	return s.TotalDistanceUpdatedAt
}

// SetID sets the value of ID.
func (s *OwnerGetChairsOKChairsItem) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OwnerGetChairsOKChairsItem) SetName(val string) {
	s.Name = val
}

// SetModel sets the value of Model.
func (s *OwnerGetChairsOKChairsItem) SetModel(val string) {
	s.Model = val
}

// SetActive sets the value of Active.
func (s *OwnerGetChairsOKChairsItem) SetActive(val bool) {
	s.Active = val
}

// SetRegisteredAt sets the value of RegisteredAt.
func (s *OwnerGetChairsOKChairsItem) SetRegisteredAt(val int64) {
	s.RegisteredAt = val
}

// SetTotalDistance sets the value of TotalDistance.
func (s *OwnerGetChairsOKChairsItem) SetTotalDistance(val int) {
	s.TotalDistance = val
}

// SetTotalDistanceUpdatedAt sets the value of TotalDistanceUpdatedAt.
func (s *OwnerGetChairsOKChairsItem) SetTotalDistanceUpdatedAt(val OptInt64) {
	s.TotalDistanceUpdatedAt = val
}

type OwnerGetSalesOK struct {
	// オーナーが管理する椅子全体の売上.
	TotalSales int `json:"total_sales"`
	// 椅子ごとの売上情報.
	Chairs []OwnerGetSalesOKChairsItem `json:"chairs"`
	// モデルごとの売上情報.
	Models []OwnerGetSalesOKModelsItem `json:"models"`
}

// GetTotalSales returns the value of TotalSales.
func (s *OwnerGetSalesOK) GetTotalSales() int {
	return s.TotalSales
}

// GetChairs returns the value of Chairs.
func (s *OwnerGetSalesOK) GetChairs() []OwnerGetSalesOKChairsItem {
	return s.Chairs
}

// GetModels returns the value of Models.
func (s *OwnerGetSalesOK) GetModels() []OwnerGetSalesOKModelsItem {
	return s.Models
}

// SetTotalSales sets the value of TotalSales.
func (s *OwnerGetSalesOK) SetTotalSales(val int) {
	s.TotalSales = val
}

// SetChairs sets the value of Chairs.
func (s *OwnerGetSalesOK) SetChairs(val []OwnerGetSalesOKChairsItem) {
	s.Chairs = val
}

// SetModels sets the value of Models.
func (s *OwnerGetSalesOK) SetModels(val []OwnerGetSalesOKModelsItem) {
	s.Models = val
}

type OwnerGetSalesOKChairsItem struct {
	// 椅子ID.
	ID string `json:"id"`
	// 椅子名.
	Name string `json:"name"`
	// 椅子ごとの売上.
	Sales int `json:"sales"`
}

// GetID returns the value of ID.
func (s *OwnerGetSalesOKChairsItem) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *OwnerGetSalesOKChairsItem) GetName() string {
	return s.Name
}

// GetSales returns the value of Sales.
func (s *OwnerGetSalesOKChairsItem) GetSales() int {
	return s.Sales
}

// SetID sets the value of ID.
func (s *OwnerGetSalesOKChairsItem) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OwnerGetSalesOKChairsItem) SetName(val string) {
	s.Name = val
}

// SetSales sets the value of Sales.
func (s *OwnerGetSalesOKChairsItem) SetSales(val int) {
	s.Sales = val
}

type OwnerGetSalesOKModelsItem struct {
	// モデル.
	Model string `json:"model"`
	// モデルごとの売上.
	Sales int `json:"sales"`
}

// GetModel returns the value of Model.
func (s *OwnerGetSalesOKModelsItem) GetModel() string {
	return s.Model
}

// GetSales returns the value of Sales.
func (s *OwnerGetSalesOKModelsItem) GetSales() int {
	return s.Sales
}

// SetModel sets the value of Model.
func (s *OwnerGetSalesOKModelsItem) SetModel(val string) {
	s.Model = val
}

// SetSales sets the value of Sales.
func (s *OwnerGetSalesOKModelsItem) SetSales(val int) {
	s.Sales = val
}

type OwnerPostOwnersCreated struct {
	// オーナーID.
	ID string `json:"id"`
	// 椅子をオーナーに紐づけるための椅子登録用トークン.
	ChairRegisterToken string `json:"chair_register_token"`
}

// GetID returns the value of ID.
func (s *OwnerPostOwnersCreated) GetID() string {
	return s.ID
}

// GetChairRegisterToken returns the value of ChairRegisterToken.
func (s *OwnerPostOwnersCreated) GetChairRegisterToken() string {
	return s.ChairRegisterToken
}

// SetID sets the value of ID.
func (s *OwnerPostOwnersCreated) SetID(val string) {
	s.ID = val
}

// SetChairRegisterToken sets the value of ChairRegisterToken.
func (s *OwnerPostOwnersCreated) SetChairRegisterToken(val string) {
	s.ChairRegisterToken = val
}

// OwnerPostOwnersCreatedHeaders wraps OwnerPostOwnersCreated with response headers.
type OwnerPostOwnersCreatedHeaders struct {
	SetCookie OptString
	Response  OwnerPostOwnersCreated
}

// GetSetCookie returns the value of SetCookie.
func (s *OwnerPostOwnersCreatedHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *OwnerPostOwnersCreatedHeaders) GetResponse() OwnerPostOwnersCreated {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *OwnerPostOwnersCreatedHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *OwnerPostOwnersCreatedHeaders) SetResponse(val OwnerPostOwnersCreated) {
	s.Response = val
}

func (*OwnerPostOwnersCreatedHeaders) ownerPostOwnersRes() {}

type OwnerPostOwnersReq struct {
	// オーナー名.
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *OwnerPostOwnersReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *OwnerPostOwnersReq) SetName(val string) {
	s.Name = val
}

type PostInitializeOK struct {
	// 実装言語
	// - go
	// - perl
	// - php
	// - python
	// - ruby
	// - rust
	// - node.
	Language string `json:"language"`
}

// GetLanguage returns the value of Language.
func (s *PostInitializeOK) GetLanguage() string {
	return s.Language
}

// SetLanguage sets the value of Language.
func (s *PostInitializeOK) SetLanguage(val string) {
	s.Language = val
}

type PostInitializeReq struct {
	// 決済サーバーアドレス.
	PaymentServer string `json:"payment_server"`
}

// GetPaymentServer returns the value of PaymentServer.
func (s *PostInitializeReq) GetPaymentServer() string {
	return s.PaymentServer
}

// SetPaymentServer sets the value of PaymentServer.
func (s *PostInitializeReq) SetPaymentServer(val string) {
	s.PaymentServer = val
}

// ライドのステータス
// MATCHING:
// サービス上でマッチング処理を行なっていて椅子が確定していない
// ENROUTE: 椅子が確定し、乗車位置に向かっている
// PICKUP: 椅子が乗車位置に到着して、ユーザーの乗車を待機している
// CARRYING: ユーザーが乗車し、椅子が目的地に向かっている
// ARRIVED: 目的地に到着した
// COMPLETED: ユーザーの決済・椅子評価が完了した.
// Ref: #/components/schemas/RideStatus
type RideStatus string

const (
	RideStatusMATCHING  RideStatus = "MATCHING"
	RideStatusENROUTE   RideStatus = "ENROUTE"
	RideStatusPICKUP    RideStatus = "PICKUP"
	RideStatusCARRYING  RideStatus = "CARRYING"
	RideStatusARRIVED   RideStatus = "ARRIVED"
	RideStatusCOMPLETED RideStatus = "COMPLETED"
)

// AllValues returns all RideStatus values.
func (RideStatus) AllValues() []RideStatus {
	return []RideStatus{
		RideStatusMATCHING,
		RideStatusENROUTE,
		RideStatusPICKUP,
		RideStatusCARRYING,
		RideStatusARRIVED,
		RideStatusCOMPLETED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RideStatus) MarshalText() ([]byte, error) {
	switch s {
	case RideStatusMATCHING:
		return []byte(s), nil
	case RideStatusENROUTE:
		return []byte(s), nil
	case RideStatusPICKUP:
		return []byte(s), nil
	case RideStatusCARRYING:
		return []byte(s), nil
	case RideStatusARRIVED:
		return []byte(s), nil
	case RideStatusCOMPLETED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RideStatus) UnmarshalText(data []byte) error {
	switch RideStatus(data) {
	case RideStatusMATCHING:
		*s = RideStatusMATCHING
		return nil
	case RideStatusENROUTE:
		*s = RideStatusENROUTE
		return nil
	case RideStatusPICKUP:
		*s = RideStatusPICKUP
		return nil
	case RideStatusCARRYING:
		*s = RideStatusCARRYING
		return nil
	case RideStatusARRIVED:
		*s = RideStatusARRIVED
		return nil
	case RideStatusCOMPLETED:
		*s = RideStatusCOMPLETED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 簡易ユーザー情報.
// Ref: #/components/schemas/User
type User struct {
	// ユーザーID.
	ID string `json:"id"`
	// ユーザー名.
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *User) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *User) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// ユーザー向け通知データ.
// Ref: #/components/schemas/UserNotificationData
type UserNotificationData struct {
	// ライドID.
	RideID                string     `json:"ride_id"`
	PickupCoordinate      Coordinate `json:"pickup_coordinate"`
	DestinationCoordinate Coordinate `json:"destination_coordinate"`
	// 運賃(割引後).
	Fare   int        `json:"fare"`
	Status RideStatus `json:"status"`
	// 椅子情報.
	Chair OptUserNotificationDataChair `json:"chair"`
	// 配車要求日時.
	CreatedAt int64 `json:"created_at"`
	// 配車要求更新日時.
	UpdatedAt int64 `json:"updated_at"`
}

// GetRideID returns the value of RideID.
func (s *UserNotificationData) GetRideID() string {
	return s.RideID
}

// GetPickupCoordinate returns the value of PickupCoordinate.
func (s *UserNotificationData) GetPickupCoordinate() Coordinate {
	return s.PickupCoordinate
}

// GetDestinationCoordinate returns the value of DestinationCoordinate.
func (s *UserNotificationData) GetDestinationCoordinate() Coordinate {
	return s.DestinationCoordinate
}

// GetFare returns the value of Fare.
func (s *UserNotificationData) GetFare() int {
	return s.Fare
}

// GetStatus returns the value of Status.
func (s *UserNotificationData) GetStatus() RideStatus {
	return s.Status
}

// GetChair returns the value of Chair.
func (s *UserNotificationData) GetChair() OptUserNotificationDataChair {
	return s.Chair
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserNotificationData) GetCreatedAt() int64 {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserNotificationData) GetUpdatedAt() int64 {
	return s.UpdatedAt
}

// SetRideID sets the value of RideID.
func (s *UserNotificationData) SetRideID(val string) {
	s.RideID = val
}

// SetPickupCoordinate sets the value of PickupCoordinate.
func (s *UserNotificationData) SetPickupCoordinate(val Coordinate) {
	s.PickupCoordinate = val
}

// SetDestinationCoordinate sets the value of DestinationCoordinate.
func (s *UserNotificationData) SetDestinationCoordinate(val Coordinate) {
	s.DestinationCoordinate = val
}

// SetFare sets the value of Fare.
func (s *UserNotificationData) SetFare(val int) {
	s.Fare = val
}

// SetStatus sets the value of Status.
func (s *UserNotificationData) SetStatus(val RideStatus) {
	s.Status = val
}

// SetChair sets the value of Chair.
func (s *UserNotificationData) SetChair(val OptUserNotificationDataChair) {
	s.Chair = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserNotificationData) SetCreatedAt(val int64) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserNotificationData) SetUpdatedAt(val int64) {
	s.UpdatedAt = val
}

// 椅子情報.
type UserNotificationDataChair struct {
	// 椅子ID.
	ID string `json:"id"`
	// 椅子の名前.
	Name string `json:"name"`
	// 椅子のモデル.
	Model string `json:"model"`
	// 椅子の統計情報.
	Stats UserNotificationDataChairStats `json:"stats"`
}

// GetID returns the value of ID.
func (s *UserNotificationDataChair) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserNotificationDataChair) GetName() string {
	return s.Name
}

// GetModel returns the value of Model.
func (s *UserNotificationDataChair) GetModel() string {
	return s.Model
}

// GetStats returns the value of Stats.
func (s *UserNotificationDataChair) GetStats() UserNotificationDataChairStats {
	return s.Stats
}

// SetID sets the value of ID.
func (s *UserNotificationDataChair) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserNotificationDataChair) SetName(val string) {
	s.Name = val
}

// SetModel sets the value of Model.
func (s *UserNotificationDataChair) SetModel(val string) {
	s.Model = val
}

// SetStats sets the value of Stats.
func (s *UserNotificationDataChair) SetStats(val UserNotificationDataChairStats) {
	s.Stats = val
}

// 椅子の統計情報.
type UserNotificationDataChairStats struct {
	// 総乗車回数.
	TotalRidesCount int `json:"total_rides_count"`
	// 総評価平均.
	TotalEvaluationAvg float64 `json:"total_evaluation_avg"`
}

// GetTotalRidesCount returns the value of TotalRidesCount.
func (s *UserNotificationDataChairStats) GetTotalRidesCount() int {
	return s.TotalRidesCount
}

// GetTotalEvaluationAvg returns the value of TotalEvaluationAvg.
func (s *UserNotificationDataChairStats) GetTotalEvaluationAvg() float64 {
	return s.TotalEvaluationAvg
}

// SetTotalRidesCount sets the value of TotalRidesCount.
func (s *UserNotificationDataChairStats) SetTotalRidesCount(val int) {
	s.TotalRidesCount = val
}

// SetTotalEvaluationAvg sets the value of TotalEvaluationAvg.
func (s *UserNotificationDataChairStats) SetTotalEvaluationAvg(val float64) {
	s.TotalEvaluationAvg = val
}
